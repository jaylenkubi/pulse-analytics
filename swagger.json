{
  "openapi": "3.0.0",
  "paths": {
    "/users": {
      "post": {
        "description": "The Users has been successfully created",
        "operationId": "createUsers",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Users has been successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create Users",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Return the Users with the specified ID",
        "operationId": "getUsersById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the Users with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get Users by ID",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/all": {
      "get": {
        "description": "Return all Userss",
        "operationId": "getAllUserss",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all Userss",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDtoArray"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all Userss",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/query": {
      "get": {
        "description": "Return Userss by query",
        "operationId": "getByQueryUserss",
        "parameters": [
          {
            "name": "where",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Object with relation names as keys and boolean values",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return Userss by query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDtoArray"
                  }
                }
              }
            }
          }
        },
        "summary": "Get by query Userss",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/update/{id}": {
      "put": {
        "description": "Update the Users with the specified ID",
        "operationId": "updateUsers",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update the Users with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "summary": "Update Users",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/delete/{id}": {
      "delete": {
        "description": "Delete the Users with the specified ID",
        "operationId": "deleteUsers",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete the Users with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "summary": "Delete Users",
        "tags": [
          "Users"
        ]
      }
    },
    "/sessions": {
      "post": {
        "description": "The Sessions has been successfully created",
        "operationId": "createSessions",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSessionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Sessions has been successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create Sessions",
        "tags": [
          "Sessions"
        ]
      }
    },
    "/sessions/{id}": {
      "get": {
        "description": "Return the Sessions with the specified ID",
        "operationId": "getSessionsById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the Sessions with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get Sessions by ID",
        "tags": [
          "Sessions"
        ]
      }
    },
    "/sessions/all": {
      "get": {
        "description": "Return all Sessionss",
        "operationId": "getAllSessionss",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all Sessionss",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDtoArray"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all Sessionss",
        "tags": [
          "Sessions"
        ]
      }
    },
    "/sessions/query": {
      "get": {
        "description": "Return Sessionss by query",
        "operationId": "getByQuerySessionss",
        "parameters": [
          {
            "name": "where",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Object with relation names as keys and boolean values",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return Sessionss by query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDtoArray"
                  }
                }
              }
            }
          }
        },
        "summary": "Get by query Sessionss",
        "tags": [
          "Sessions"
        ]
      }
    },
    "/sessions/update/{id}": {
      "put": {
        "description": "Update the Sessions with the specified ID",
        "operationId": "updateSessions",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSessionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update the Sessions with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponseDto"
                }
              }
            }
          }
        },
        "summary": "Update Sessions",
        "tags": [
          "Sessions"
        ]
      }
    },
    "/sessions/delete/{id}": {
      "delete": {
        "description": "Delete the Sessions with the specified ID",
        "operationId": "deleteSessions",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete the Sessions with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "summary": "Delete Sessions",
        "tags": [
          "Sessions"
        ]
      }
    },
    "/auth/signup": {
      "post": {
        "description": "",
        "operationId": "signup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "summary": "Create a new user account",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "description": "",
        "operationId": "login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponseDto"
                }
              }
            }
          }
        },
        "summary": "Login with email and password",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "description": "Access token refreshed successfully",
        "operationId": "refresh",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Access token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponseDto"
                }
              }
            }
          }
        },
        "summary": "Refresh access token",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "description": "Logged out successfully",
        "operationId": "logout",
        "parameters": [
          {
            "name": "authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponseDto"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Logout from the current session",
        "tags": [
          "auth"
        ]
      }
    },
    "/websites/{websiteId}/analytics/traffic": {
      "get": {
        "description": "Returns traffic source statistics for the specified time range",
        "operationId": "getTrafficSourceStats",
        "parameters": [
          {
            "name": "websiteId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-01T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-02T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns traffic source statistics for the specified time range",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get traffic source statistics",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/websites/{websiteId}/analytics/pages": {
      "get": {
        "description": "Returns page performance statistics for the specified time range",
        "operationId": "getPagePerformanceStats",
        "parameters": [
          {
            "name": "websiteId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-01T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-02T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns page performance statistics for the specified time range",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get page performance statistics",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/websites/{websiteId}/analytics/users": {
      "get": {
        "description": "Returns user behavior statistics for the specified time range",
        "operationId": "getUserBehaviorStats",
        "parameters": [
          {
            "name": "websiteId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-01T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-02T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user behavior statistics for the specified time range",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get user behavior statistics",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/websites/{websiteId}/analytics/realtime": {
      "get": {
        "description": "Returns realtime analytics data",
        "operationId": "getRealtimeAnalytics",
        "parameters": [
          {
            "name": "websiteId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns realtime analytics data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get realtime analytics data",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/websites/{websiteId}/analytics/audience": {
      "get": {
        "description": "Returns audience analytics for the specified time range",
        "operationId": "getAudienceAnalytics",
        "parameters": [
          {
            "name": "websiteId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-01T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-02T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns audience analytics for the specified time range",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get audience analytics",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/features": {
      "post": {
        "description": "Creates a new feature in the system. Admin access required.",
        "operationId": "createFeature",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFeatureDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Creates a new feature in the system. Admin access required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feature"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Create a new feature",
        "tags": [
          "Features"
        ]
      },
      "get": {
        "description": "Retrieves all features in the system. Admin access required.",
        "operationId": "getAllFeatures",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Retrieves all features in the system. Admin access required.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Feature"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get all features",
        "tags": [
          "Features"
        ]
      }
    },
    "/features/website/{websiteId}": {
      "get": {
        "description": "Retrieves all features for a specific website. Admin access required.",
        "operationId": "getAllFeaturesByWebsiteId",
        "parameters": [
          {
            "name": "websiteId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves all features for a specific website. Admin access required.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Feature"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get all features by websiteId",
        "tags": [
          "Features"
        ]
      }
    },
    "/features/name/{name}": {
      "get": {
        "description": "Retrieves a feature by its name. Admin access required.",
        "operationId": "getFeatureByName",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves a feature by its name. Admin access required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feature"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get a feature by name",
        "tags": [
          "Features"
        ]
      },
      "put": {
        "description": "Updates an existing feature by name. Admin access required.",
        "operationId": "updateFeature",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateFeatureDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updates an existing feature by name. Admin access required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Feature"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Update a feature",
        "tags": [
          "Features"
        ]
      },
      "delete": {
        "description": "Deletes a feature by name. Admin access required.",
        "operationId": "deleteFeature",
        "parameters": [
          {
            "name": "name",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deletes a feature by name. Admin access required."
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Delete a feature",
        "tags": [
          "Features"
        ]
      }
    },
    "/features/website": {
      "post": {
        "description": "Enables and configures a feature for a specific website. Admin or website owner access required.",
        "operationId": "enableFeatureForWebsite",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebsiteFeatureDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Enables and configures a feature for a specific website. Admin or website owner access required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteFeature"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Enable/Configure a feature for a website",
        "tags": [
          "Features"
        ]
      }
    },
    "/features/website/{websiteId}/features": {
      "get": {
        "description": "Retrieves all features configured for a specific website. Admin or website owner access required.",
        "operationId": "getWebsiteFeatures",
        "parameters": [
          {
            "name": "websiteId",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves all features configured for a specific website. Admin or website owner access required.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WebsiteFeature"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get features for a website",
        "tags": [
          "Features"
        ]
      }
    },
    "/features/access-level": {
      "post": {
        "description": "Sets permissions for a feature based on access level. Admin or website owner access required.",
        "operationId": "setFeatureAccessLevel",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AccessLevelFeatureDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Sets permissions for a feature based on access level. Admin or website owner access required.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AccessLevelFeature"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Set access level permissions for a feature",
        "tags": [
          "Features"
        ]
      }
    },
    "/features/access-level/{featureName}": {
      "get": {
        "description": "Retrieves all access level permissions for a specific feature. Admin or website owner access required.",
        "operationId": "getFeatureAccessLevels",
        "parameters": [
          {
            "name": "featureName",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieves all access level permissions for a specific feature. Admin or website owner access required.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccessLevelFeature"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ],
        "summary": "Get access levels for a feature",
        "tags": [
          "Features"
        ]
      }
    },
    "/data-collector/event": {
      "post": {
        "description": "The event has been successfully collected",
        "operationId": "collectEvent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The event has been successfully collected",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponseDto"
                }
              }
            }
          }
        },
        "summary": "Collect event data",
        "tags": [
          "Data Collector"
        ]
      }
    },
    "/websites": {
      "post": {
        "description": "The Websites has been successfully created",
        "operationId": "createWebsites",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebsiteDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Websites has been successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create Websites",
        "tags": [
          "Websites"
        ]
      }
    },
    "/websites/{id}": {
      "get": {
        "description": "Return the Websites with the specified ID",
        "operationId": "getWebsitesById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the Websites with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get Websites by ID",
        "tags": [
          "Websites"
        ]
      }
    },
    "/websites/all": {
      "get": {
        "description": "Return all Websitess",
        "operationId": "getAllWebsitess",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all Websitess",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDtoArray"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all Websitess",
        "tags": [
          "Websites"
        ]
      }
    },
    "/websites/query": {
      "get": {
        "description": "Return Websitess by query",
        "operationId": "getByQueryWebsitess",
        "parameters": [
          {
            "name": "where",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Object with relation names as keys and boolean values",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return Websitess by query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDtoArray"
                  }
                }
              }
            }
          }
        },
        "summary": "Get by query Websitess",
        "tags": [
          "Websites"
        ]
      }
    },
    "/websites/update/{id}": {
      "put": {
        "description": "Update the Websites with the specified ID",
        "operationId": "updateWebsites",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWebsiteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update the Websites with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteResponseDto"
                }
              }
            }
          }
        },
        "summary": "Update Websites",
        "tags": [
          "Websites"
        ]
      }
    },
    "/websites/delete/{id}": {
      "delete": {
        "description": "Delete the Websites with the specified ID",
        "operationId": "deleteWebsites",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete the Websites with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "summary": "Delete Websites",
        "tags": [
          "Websites"
        ]
      }
    },
    "/website-access": {
      "post": {
        "description": "The Website-access has been successfully created",
        "operationId": "createWebsite-access",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebsiteAccessDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Website-access has been successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteAccessResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create Website-access",
        "tags": [
          "Website-access"
        ]
      }
    },
    "/website-access/{id}": {
      "get": {
        "description": "Return the Website-access with the specified ID",
        "operationId": "getWebsite-accessById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the Website-access with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteAccessResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get Website-access by ID",
        "tags": [
          "Website-access"
        ]
      }
    },
    "/website-access/all": {
      "get": {
        "description": "Return all Website-accesss",
        "operationId": "getAllWebsite-accesss",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all Website-accesss",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDtoArray"
                  }
                }
              }
            }
          }
        },
        "summary": "Get all Website-accesss",
        "tags": [
          "Website-access"
        ]
      }
    },
    "/website-access/query": {
      "get": {
        "description": "Return Website-accesss by query",
        "operationId": "getByQueryWebsite-accesss",
        "parameters": [
          {
            "name": "where",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "order",
            "required": false,
            "in": "query",
            "schema": {
              "type": "object"
            }
          },
          {
            "name": "take",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "skip",
            "required": false,
            "in": "query",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "relations",
            "required": false,
            "in": "query",
            "description": "Object with relation names as keys and boolean values",
            "schema": {
              "type": "object"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return Website-accesss by query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ResponseDtoArray"
                  }
                }
              }
            }
          }
        },
        "summary": "Get by query Website-accesss",
        "tags": [
          "Website-access"
        ]
      }
    },
    "/website-access/update/{id}": {
      "put": {
        "description": "Update the Website-access with the specified ID",
        "operationId": "updateWebsite-access",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWebsiteAccessDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update the Website-access with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteAccessResponseDto"
                }
              }
            }
          }
        },
        "summary": "Update Website-access",
        "tags": [
          "Website-access"
        ]
      }
    },
    "/website-access/delete/{id}": {
      "delete": {
        "description": "Delete the Website-access with the specified ID",
        "operationId": "deleteWebsite-access",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete the Website-access with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "summary": "Delete Website-access",
        "tags": [
          "Website-access"
        ]
      }
    }
  },
  "info": {
    "title": "Pulse Analytics",
    "description": "Pulse Analytics API",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "securitySchemes": {
      "JWT": {
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "type": "http",
        "name": "Authorization",
        "description": "Enter JWT token",
        "in": "header"
      }
    },
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "password"
        ]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "description": "User's email address"
          },
          "roles": {
            "type": "string",
            "description": "User's role",
            "enum": [
              "admin",
              "analyst",
              "user"
            ]
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "firstName",
          "lastName",
          "email",
          "roles"
        ]
      },
      "ResponseDtoArray": {
        "type": "object",
        "properties": {}
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          },
          "roles": {
            "type": "string",
            "description": "User's role",
            "enum": [
              "admin",
              "analyst",
              "user"
            ]
          }
        }
      },
      "CreateSessionDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "ID of the user for this session"
          },
          "token": {
            "type": "string",
            "description": "Session token"
          },
          "ipAddress": {
            "type": "string",
            "description": "IP address of the client"
          },
          "userAgent": {
            "type": "string",
            "description": "User agent of the client"
          },
          "isValid": {
            "type": "boolean",
            "description": "Whether the session is valid",
            "default": true
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string",
            "description": "When the session expires"
          }
        },
        "required": [
          "userId",
          "isValid",
          "expiresAt"
        ]
      },
      "SessionResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp"
          },
          "user": {
            "type": "object",
            "description": "User information"
          },
          "ipAddress": {
            "type": "string",
            "description": "IP address of the client"
          },
          "userAgent": {
            "type": "string",
            "description": "User agent of the client"
          },
          "isValid": {
            "type": "boolean",
            "description": "Whether the session is valid"
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string",
            "description": "When the session expires"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "user",
          "ipAddress",
          "userAgent",
          "isValid",
          "expiresAt"
        ]
      },
      "UpdateSessionDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Session token"
          },
          "isValid": {
            "type": "boolean",
            "description": "Whether the session is valid"
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string",
            "description": "When the session expires"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "example": "660e8400-e29b-41d4-a716-446655440000"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp",
            "example": "2025-03-01T00:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp",
            "example": "2025-03-01T00:00:00Z"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "SignInResponseDto": {
        "type": "object",
        "properties": {
          "user": {
            "$ref": "#/components/schemas/UserResponseDto"
          },
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "user",
          "accessToken",
          "refreshToken"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "RefreshTokenResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        },
        "required": [
          "accessToken"
        ]
      },
      "LogoutResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          }
        },
        "required": [
          "message"
        ]
      },
      "CreateFeatureDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique name identifier for the feature",
            "example": "realtime-analytics"
          },
          "description": {
            "type": "string",
            "description": "Description of what the feature does",
            "example": "Provides real-time analytics and visitor tracking"
          },
          "category": {
            "type": "string",
            "description": "Category the feature belongs to",
            "example": "analytics",
            "enum": [
              "analytics",
              "reporting",
              "settings",
              "user-management"
            ]
          },
          "isGloballyAvailable": {
            "type": "boolean",
            "description": "Whether the feature is available to all websites by default",
            "example": true,
            "default": true
          }
        },
        "required": [
          "name",
          "description",
          "category"
        ]
      },
      "Feature": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "example": "660e8400-e29b-41d4-a716-446655440000"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp",
            "example": "2025-03-01T00:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp",
            "example": "2025-03-01T00:00:00Z"
          },
          "name": {
            "type": "string",
            "description": "Unique name identifier for the feature",
            "example": "realtime-analytics"
          },
          "description": {
            "type": "string",
            "description": "Description of what the feature does",
            "example": "Provides real-time analytics and visitor tracking"
          },
          "category": {
            "type": "string",
            "description": "Category the feature belongs to",
            "example": "analytics",
            "enum": [
              "analytics",
              "reporting",
              "settings",
              "user-management"
            ]
          },
          "isGloballyAvailable": {
            "type": "boolean",
            "description": "Whether the feature is available to all websites by default",
            "example": true
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "description",
          "category",
          "isGloballyAvailable"
        ]
      },
      "UpdateFeatureDto": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Updated description of what the feature does",
            "example": "Provides enhanced real-time analytics and visitor tracking"
          },
          "category": {
            "type": "string",
            "description": "Updated category the feature belongs to",
            "example": "analytics",
            "enum": [
              "analytics",
              "reporting",
              "settings",
              "user-management"
            ]
          },
          "isGloballyAvailable": {
            "type": "boolean",
            "description": "Whether the feature is available to all websites by default",
            "example": true
          }
        }
      },
      "WebsiteFeatureDto": {
        "type": "object",
        "properties": {
          "websiteId": {
            "type": "string",
            "description": "UUID of the website to enable the feature for",
            "example": "550e8400-e29b-41d4-a716-446655440000"
          },
          "featureId": {
            "type": "string",
            "description": "Name of the feature to enable",
            "example": "realtime-analytics"
          },
          "isEnabled": {
            "type": "boolean",
            "description": "Whether the feature is enabled for this website",
            "example": true
          },
          "configuration": {
            "type": "object",
            "description": "Website-specific configuration for the feature",
            "example": {
              "refreshInterval": 30,
              "maxDataPoints": 100,
              "enableNotifications": true
            }
          }
        },
        "required": [
          "websiteId",
          "featureId",
          "isEnabled"
        ]
      },
      "WebsiteFeature": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "example": "660e8400-e29b-41d4-a716-446655440000"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp",
            "example": "2025-03-01T00:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp",
            "example": "2025-03-01T00:00:00Z"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt"
        ]
      },
      "AccessLevelFeatureDto": {
        "type": "object",
        "properties": {
          "featureName": {
            "type": "string",
            "description": "Name of the feature to set access level for",
            "example": "realtime-analytics"
          },
          "accessLevel": {
            "type": "string",
            "description": "Access level to set permissions for",
            "example": "ADMIN",
            "enum": [
              "owner",
              "admin",
              "analyst",
              "viewer"
            ]
          },
          "permissions": {
            "type": "object",
            "description": "Permission settings for this feature and access level",
            "example": {
              "canView": true,
              "canEdit": true,
              "canManage": false
            }
          }
        },
        "required": [
          "featureName",
          "accessLevel",
          "permissions"
        ]
      },
      "AccessLevelFeature": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier",
            "example": "660e8400-e29b-41d4-a716-446655440000"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Date when this permission set was created",
            "example": "2025-03-01T00:00:00Z"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp",
            "example": "2025-03-01T00:00:00Z"
          },
          "permissions": {
            "type": "object",
            "description": "Permission settings for this feature and access level",
            "example": {
              "canView": true,
              "canEdit": true,
              "canManage": false
            }
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "permissions"
        ]
      },
      "CreateEventDto": {
        "type": "object",
        "properties": {}
      },
      "EventResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp"
          },
          "message_id": {
            "type": "string",
            "description": "Unique message ID"
          },
          "event_name": {
            "type": "string",
            "description": "Event name",
            "enum": [
              "page_view",
              "user_action",
              "system_event"
            ]
          },
          "website": {
            "type": "object",
            "description": "Website information"
          },
          "tracking_id": {
            "type": "string",
            "description": "Website tracking ID"
          },
          "user": {
            "type": "object",
            "description": "User information"
          },
          "context": {
            "type": "object",
            "description": "Event context"
          },
          "traffic": {
            "type": "object",
            "description": "Traffic information"
          },
          "page": {
            "type": "object",
            "description": "Page information"
          },
          "metrics": {
            "type": "object",
            "description": "Event metrics"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "message_id",
          "event_name",
          "website",
          "tracking_id",
          "user",
          "context",
          "traffic",
          "page",
          "metrics"
        ]
      },
      "WebsiteSettings": {
        "type": "object",
        "properties": {
          "tracking_options": {
            "description": "Tracking options for the website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "excluded_paths": {
            "description": "Paths to exclude from tracking",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "custom_variables": {
            "type": "object",
            "description": "Custom variables for tracking"
          }
        }
      },
      "CreateWebsiteDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the website"
          },
          "domains": {
            "description": "List of domains associated with this website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "settings": {
            "description": "Website settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WebsiteSettings"
              }
            ]
          }
        },
        "required": [
          "name",
          "domains"
        ]
      },
      "WebsiteResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp"
          },
          "name": {
            "type": "string",
            "description": "Name of the website"
          },
          "domains": {
            "description": "List of domains associated with this website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tracking_id": {
            "type": "string",
            "description": "Unique tracking ID for this website"
          },
          "settings": {
            "type": "object",
            "description": "Website settings"
          },
          "owner": {
            "type": "object",
            "description": "Owner ID of the website"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "domains",
          "tracking_id",
          "settings",
          "owner"
        ]
      },
      "UpdateWebsiteSettings": {
        "type": "object",
        "properties": {
          "tracking_options": {
            "description": "Tracking options for the website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "excluded_paths": {
            "description": "Paths to exclude from tracking",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "custom_variables": {
            "type": "object",
            "description": "Custom variables for tracking"
          }
        }
      },
      "UpdateWebsiteDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the website"
          },
          "domains": {
            "description": "List of domains associated with this website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "settings": {
            "description": "Website settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdateWebsiteSettings"
              }
            ]
          }
        }
      },
      "CreateWebsiteAccessDto": {
        "type": "object",
        "properties": {
          "website_id": {
            "type": "string",
            "description": "ID of the website"
          },
          "user_id": {
            "type": "string",
            "description": "ID of the user to grant access"
          },
          "access_level": {
            "type": "string",
            "description": "Access level for the user",
            "enum": [
              "owner",
              "admin",
              "analyst",
              "viewer"
            ],
            "default": "viewer"
          }
        },
        "required": [
          "website_id",
          "user_id",
          "access_level"
        ]
      },
      "WebsiteAccessResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp"
          },
          "website": {
            "type": "object",
            "description": "Website information"
          },
          "user": {
            "type": "object",
            "description": "User information"
          },
          "access_level": {
            "type": "string",
            "description": "Access level for the user",
            "enum": [
              "owner",
              "admin",
              "analyst",
              "viewer"
            ]
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "website",
          "user",
          "access_level"
        ]
      },
      "UpdateWebsiteAccessDto": {
        "type": "object",
        "properties": {
          "access_level": {
            "type": "string",
            "description": "Access level for the user",
            "enum": [
              "owner",
              "admin",
              "analyst",
              "viewer"
            ]
          }
        },
        "required": [
          "access_level"
        ]
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}