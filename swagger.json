{
  "openapi": "3.0.0",
  "paths": {
    "/users": {
      "post": {
        "description": "The Users has been successfully created",
        "operationId": "createUsers",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Users has been successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create Users",
        "tags": [
          "Users"
        ]
      },
      "get": {
        "description": "Return all Userss",
        "operationId": "getAllUserss",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all Userss",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDtoArray"
                }
              }
            }
          }
        },
        "summary": "Get all Userss",
        "tags": [
          "Users"
        ]
      }
    },
    "/users/{id}": {
      "get": {
        "description": "Return the Users with the specified ID",
        "operationId": "getUsersById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the Users with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get Users by ID",
        "tags": [
          "Users"
        ]
      },
      "put": {
        "description": "Update the Users with the specified ID",
        "operationId": "updateUsers",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update the Users with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserResponseDto"
                }
              }
            }
          }
        },
        "summary": "Update Users",
        "tags": [
          "Users"
        ]
      },
      "delete": {
        "description": "Delete the Users with the specified ID",
        "operationId": "deleteUsers",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete the Users with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "summary": "Delete Users",
        "tags": [
          "Users"
        ]
      }
    },
    "/sessions": {
      "post": {
        "description": "The Sessions has been successfully created",
        "operationId": "createSessions",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateSessionDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Sessions has been successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create Sessions",
        "tags": [
          "Sessions"
        ]
      },
      "get": {
        "description": "Return all Sessionss",
        "operationId": "getAllSessionss",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all Sessionss",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDtoArray"
                }
              }
            }
          }
        },
        "summary": "Get all Sessionss",
        "tags": [
          "Sessions"
        ]
      }
    },
    "/sessions/{id}": {
      "get": {
        "description": "Return the Sessions with the specified ID",
        "operationId": "getSessionsById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the Sessions with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get Sessions by ID",
        "tags": [
          "Sessions"
        ]
      },
      "put": {
        "description": "Update the Sessions with the specified ID",
        "operationId": "updateSessions",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSessionDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update the Sessions with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SessionResponseDto"
                }
              }
            }
          }
        },
        "summary": "Update Sessions",
        "tags": [
          "Sessions"
        ]
      },
      "delete": {
        "description": "Delete the Sessions with the specified ID",
        "operationId": "deleteSessions",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete the Sessions with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "summary": "Delete Sessions",
        "tags": [
          "Sessions"
        ]
      }
    },
    "/auth/signup": {
      "post": {
        "description": "",
        "operationId": "signup",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUserDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        },
        "summary": "Create a new user account",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/login": {
      "post": {
        "description": "",
        "operationId": "login",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignInResponseDto"
                }
              }
            }
          }
        },
        "summary": "Login with email and password",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/refresh": {
      "post": {
        "description": "Access token refreshed successfully",
        "operationId": "refresh",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Access token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RefreshTokenResponseDto"
                }
              }
            }
          }
        },
        "summary": "Refresh access token",
        "tags": [
          "auth"
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "description": "Logged out successfully",
        "operationId": "logout",
        "parameters": [
          {
            "name": "authorization",
            "required": true,
            "in": "header",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LogoutResponseDto"
                }
              }
            }
          }
        },
        "summary": "Logout from the current session",
        "tags": [
          "auth"
        ]
      }
    },
    "/analytics/traffic": {
      "get": {
        "description": "Returns traffic source statistics for the specified time range",
        "operationId": "getTrafficSourceStats",
        "parameters": [
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-01T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-02T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns traffic source statistics for the specified time range",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get traffic source statistics",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/pages": {
      "get": {
        "description": "Returns page performance statistics for the specified time range",
        "operationId": "getPagePerformanceStats",
        "parameters": [
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-01T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-02T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns page performance statistics for the specified time range",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get page performance statistics",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/users": {
      "get": {
        "description": "Returns user behavior statistics for the specified time range",
        "operationId": "getUserBehaviorStats",
        "parameters": [
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-01T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-02T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user behavior statistics for the specified time range",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get user behavior statistics",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/realtime": {
      "get": {
        "description": "Returns realtime analytics data",
        "operationId": "getRealtimeAnalytics",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Returns realtime analytics data",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get realtime analytics data",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/analytics/audience": {
      "get": {
        "description": "Returns audience analytics for the specified time range",
        "operationId": "getAudienceAnalytics",
        "parameters": [
          {
            "name": "start",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-01T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "end",
            "required": true,
            "in": "query",
            "schema": {
              "format": "date-time",
              "example": "2024-03-02T00:00:00Z",
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "example": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "default": 10,
              "example": 20,
              "type": "number"
            }
          },
          {
            "name": "offset",
            "required": true,
            "in": "query",
            "schema": {
              "default": 0,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns audience analytics for the specified time range",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "Get audience analytics",
        "tags": [
          "Analytics"
        ]
      }
    },
    "/data-collector/event": {
      "post": {
        "description": "The event has been successfully collected",
        "operationId": "collectEvent",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEventDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The event has been successfully collected",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponseDto"
                }
              }
            }
          }
        },
        "summary": "Collect event data",
        "tags": [
          "Data Collector"
        ]
      }
    },
    "/websites": {
      "post": {
        "description": "The Websites has been successfully created",
        "operationId": "createWebsites",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebsiteDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Websites has been successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create Websites",
        "tags": [
          "Websites"
        ]
      },
      "get": {
        "description": "Return all Websitess",
        "operationId": "getAllWebsitess",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all Websitess",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDtoArray"
                }
              }
            }
          }
        },
        "summary": "Get all Websitess",
        "tags": [
          "Websites"
        ]
      }
    },
    "/websites/{id}": {
      "get": {
        "description": "Return the Websites with the specified ID",
        "operationId": "getWebsitesById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the Websites with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get Websites by ID",
        "tags": [
          "Websites"
        ]
      },
      "put": {
        "description": "Update the Websites with the specified ID",
        "operationId": "updateWebsites",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWebsiteDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update the Websites with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteResponseDto"
                }
              }
            }
          }
        },
        "summary": "Update Websites",
        "tags": [
          "Websites"
        ]
      },
      "delete": {
        "description": "Delete the Websites with the specified ID",
        "operationId": "deleteWebsites",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete the Websites with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "summary": "Delete Websites",
        "tags": [
          "Websites"
        ]
      }
    },
    "/website-access": {
      "post": {
        "description": "The Website-access has been successfully created",
        "operationId": "createWebsite-access",
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateWebsiteAccessDto"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The Website-access has been successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteAccessResponseDto"
                }
              }
            }
          }
        },
        "summary": "Create Website-access",
        "tags": [
          "Website-access"
        ]
      },
      "get": {
        "description": "Return all Website-accesss",
        "operationId": "getAllWebsite-accesss",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Return all Website-accesss",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResponseDtoArray"
                }
              }
            }
          }
        },
        "summary": "Get all Website-accesss",
        "tags": [
          "Website-access"
        ]
      }
    },
    "/website-access/{id}": {
      "get": {
        "description": "Return the Website-access with the specified ID",
        "operationId": "getWebsite-accessById",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Return the Website-access with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteAccessResponseDto"
                }
              }
            }
          }
        },
        "summary": "Get Website-access by ID",
        "tags": [
          "Website-access"
        ]
      },
      "put": {
        "description": "Update the Website-access with the specified ID",
        "operationId": "updateWebsite-access",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateWebsiteAccessDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Update the Website-access with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebsiteAccessResponseDto"
                }
              }
            }
          }
        },
        "summary": "Update Website-access",
        "tags": [
          "Website-access"
        ]
      },
      "delete": {
        "description": "Delete the Website-access with the specified ID",
        "operationId": "deleteWebsite-access",
        "parameters": [
          {
            "name": "id",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Delete the Website-access with the specified ID",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          }
        },
        "summary": "Delete Website-access",
        "tags": [
          "Website-access"
        ]
      }
    }
  },
  "info": {
    "title": "Pulse Analytics",
    "description": "Pulse Analytics API",
    "version": "1.0",
    "contact": {}
  },
  "tags": [],
  "servers": [],
  "components": {
    "schemas": {
      "CreateUserDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "firstName",
          "lastName",
          "email",
          "password"
        ]
      },
      "UserResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp"
          },
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "description": "User's email address"
          },
          "roles": {
            "type": "string",
            "description": "User's role",
            "enum": [
              "admin",
              "analyst",
              "user"
            ]
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "firstName",
          "lastName",
          "email",
          "roles"
        ]
      },
      "ResponseDtoArray": {
        "type": "object",
        "properties": {}
      },
      "UpdateUserDto": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "User's first name"
          },
          "lastName": {
            "type": "string",
            "description": "User's last name"
          },
          "email": {
            "type": "string",
            "description": "User's email address"
          },
          "password": {
            "type": "string",
            "description": "User's password"
          },
          "roles": {
            "type": "string",
            "description": "User's role",
            "enum": [
              "admin",
              "analyst",
              "user"
            ]
          }
        }
      },
      "CreateSessionDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "string",
            "description": "ID of the user for this session"
          },
          "token": {
            "type": "string",
            "description": "Session token"
          },
          "ipAddress": {
            "type": "string",
            "description": "IP address of the client"
          },
          "userAgent": {
            "type": "string",
            "description": "User agent of the client"
          },
          "isValid": {
            "type": "boolean",
            "description": "Whether the session is valid",
            "default": true
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string",
            "description": "When the session expires"
          }
        },
        "required": [
          "userId",
          "isValid",
          "expiresAt"
        ]
      },
      "SessionResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp"
          },
          "user": {
            "type": "object",
            "description": "User information"
          },
          "ipAddress": {
            "type": "string",
            "description": "IP address of the client"
          },
          "userAgent": {
            "type": "string",
            "description": "User agent of the client"
          },
          "isValid": {
            "type": "boolean",
            "description": "Whether the session is valid"
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string",
            "description": "When the session expires"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "user",
          "ipAddress",
          "userAgent",
          "isValid",
          "expiresAt"
        ]
      },
      "UpdateSessionDto": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Session token"
          },
          "isValid": {
            "type": "boolean",
            "description": "Whether the session is valid"
          },
          "expiresAt": {
            "format": "date-time",
            "type": "string",
            "description": "When the session expires"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {}
      },
      "LoginDto": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        },
        "required": [
          "email",
          "password"
        ]
      },
      "SignInResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          },
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "accessToken",
          "refreshToken"
        ]
      },
      "RefreshTokenDto": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string"
          }
        },
        "required": [
          "refreshToken"
        ]
      },
      "RefreshTokenResponseDto": {
        "type": "object",
        "properties": {
          "accessToken": {
            "type": "string"
          }
        },
        "required": [
          "accessToken"
        ]
      },
      "LogoutResponseDto": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Response message"
          }
        },
        "required": [
          "message"
        ]
      },
      "CreateEventDto": {
        "type": "object",
        "properties": {}
      },
      "EventResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp"
          },
          "message_id": {
            "type": "string",
            "description": "Unique message ID"
          },
          "event_name": {
            "type": "string",
            "description": "Event name",
            "enum": [
              "page_view",
              "user_action",
              "system_event"
            ]
          },
          "website": {
            "type": "object",
            "description": "Website information"
          },
          "tracking_id": {
            "type": "string",
            "description": "Website tracking ID"
          },
          "user": {
            "type": "object",
            "description": "User information"
          },
          "context": {
            "type": "object",
            "description": "Event context"
          },
          "traffic": {
            "type": "object",
            "description": "Traffic information"
          },
          "page": {
            "type": "object",
            "description": "Page information"
          },
          "metrics": {
            "type": "object",
            "description": "Event metrics"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "message_id",
          "event_name",
          "website",
          "tracking_id",
          "user",
          "context",
          "traffic",
          "page",
          "metrics"
        ]
      },
      "WebsiteSettings": {
        "type": "object",
        "properties": {
          "tracking_options": {
            "description": "Tracking options for the website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "excluded_paths": {
            "description": "Paths to exclude from tracking",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "custom_variables": {
            "type": "object",
            "description": "Custom variables for tracking"
          }
        }
      },
      "CreateWebsiteDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the website"
          },
          "domains": {
            "description": "List of domains associated with this website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "settings": {
            "description": "Website settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/WebsiteSettings"
              }
            ]
          }
        },
        "required": [
          "name",
          "domains"
        ]
      },
      "WebsiteResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp"
          },
          "name": {
            "type": "string",
            "description": "Name of the website"
          },
          "domains": {
            "description": "List of domains associated with this website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tracking_id": {
            "type": "string",
            "description": "Unique tracking ID for this website"
          },
          "settings": {
            "type": "object",
            "description": "Website settings"
          },
          "owner": {
            "type": "object",
            "description": "Owner ID of the website"
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "name",
          "domains",
          "tracking_id",
          "settings",
          "owner"
        ]
      },
      "UpdateWebsiteSettings": {
        "type": "object",
        "properties": {
          "tracking_options": {
            "description": "Tracking options for the website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "excluded_paths": {
            "description": "Paths to exclude from tracking",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "custom_variables": {
            "type": "object",
            "description": "Custom variables for tracking"
          }
        }
      },
      "UpdateWebsiteDto": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the website"
          },
          "domains": {
            "description": "List of domains associated with this website",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "settings": {
            "description": "Website settings",
            "allOf": [
              {
                "$ref": "#/components/schemas/UpdateWebsiteSettings"
              }
            ]
          }
        }
      },
      "CreateWebsiteAccessDto": {
        "type": "object",
        "properties": {
          "website_id": {
            "type": "string",
            "description": "ID of the website"
          },
          "user_id": {
            "type": "string",
            "description": "ID of the user to grant access"
          },
          "access_level": {
            "type": "string",
            "description": "Access level for the user",
            "enum": [
              "owner",
              "admin",
              "analyst",
              "viewer"
            ],
            "default": "viewer"
          }
        },
        "required": [
          "website_id",
          "user_id",
          "access_level"
        ]
      },
      "WebsiteAccessResponseDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Unique identifier"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string",
            "description": "Creation timestamp"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string",
            "description": "Last update timestamp"
          },
          "website": {
            "type": "object",
            "description": "Website information"
          },
          "user": {
            "type": "object",
            "description": "User information"
          },
          "access_level": {
            "type": "string",
            "description": "Access level for the user",
            "enum": [
              "owner",
              "admin",
              "analyst",
              "viewer"
            ]
          }
        },
        "required": [
          "id",
          "createdAt",
          "updatedAt",
          "website",
          "user",
          "access_level"
        ]
      },
      "UpdateWebsiteAccessDto": {
        "type": "object",
        "properties": {
          "access_level": {
            "type": "string",
            "description": "Access level for the user",
            "enum": [
              "owner",
              "admin",
              "analyst",
              "viewer"
            ]
          }
        },
        "required": [
          "access_level"
        ]
      }
    }
  }
}